{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/current/current.component.css","webpack:///./src/app/current/current.component.html","webpack:///./src/app/current/current.component.ts","webpack:///./src/app/forcast/forcast.component.css","webpack:///./src/app/forcast/forcast.component.html","webpack:///./src/app/forcast/forcast.component.ts","webpack:///./src/app/weather.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  constructor(private http:HttpClient) { }\n\n  getForcast(city:string){\n    console.log(city)\n    return this.http.get(`https://api.apixu.com/v1/forecast.json?key=390d8081bcde41c5abd72714191904&q=${city}&days=7`);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n \\n  <nav class=\\\"navbar navbar-expand-lg navbar-dark bg-primary\\\">\\n      <a class=\\\"navbar-brand\\\" href=\\\"#\\\"> Welcome to \\\"KAISA HAI AJ KA MAUSAM!\\\"</a>\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarColor02\\\" aria-controls=\\\"navbarColor02\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n      </button>\\n    </nav>\\n<div class=\\\"container mt-3\\\" style=\\\"padding-left: 20%\\\">\\n    <form  (ngSubmit)=\\\"onSubmit(form)\\\" #form=\\\"ngForm\\\">\\n        <fieldset>\\n          <div class=\\\"form-group row\\\">\\n            <div class=\\\"col-lg-8\\\">\\n                <input ngModel name=\\\"city\\\" placeholder=\\\"Enter your city\\\" class=\\\"form-control\\\" >\\n            </div>\\n            <div class=\\\"col-lg-4\\\">\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Get</button>    </div>\\n              </div>\\n             </fieldset>\\n      </form>\\n\\n</div>\\n\\n\\n<app-current [current]=currentRes></app-current>\\n\\n<div class=\\\"container mt-1\\\" style=\\\"padding-left: 25%\\\">\\n    <table class=\\\"table\\\" style=\\\"width: 80%\\\">\\n        <tbody >\\n\\n          <tr *ngFor=\\\"let cur of data\\\">\\n              <app-forcast [result]=cur ></app-forcast>\\n          </tr>\\n           \\n         \\n        </tbody>\\n      </table> \\n</div>\\n\\n\\n<!-- <div *ngFor=\\\"let cur of data\\\"> \\n  <app-forcast [result]=cur></app-forcast>\\n</div> -->\\n\\n\"","import { Component } from '@angular/core';\nimport {NgForm} from '@angular/forms';\nimport {ApiService} from './api.service';\nimport {Weather} from './weather';\nimport { getLocaleDayNames } from '@angular/common';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'weatherApp';\n  data:Array<Weather>=[];\n  result:any;\n  currentRes:Weather=new Weather();\n  days:Array<string>=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n  constructor(private service:ApiService){}\nonSubmit(form:NgForm){\n  \n  this.service.getForcast(form.value.city).subscribe( (data) => {\n    this.result=data;\n    this.currentRes.cityName=this.result.location.name;\n    this.currentRes.icon=this.result.current.condition.icon;\n    this.currentRes.weatherKind=this.result.current.condition.text;\n    this.currentRes.humidity=this.result.current.humidity;\n    this.currentRes.temp=this.result.current.temp_c;\n    this.currentRes.windSpeed=this.result.current.wind_kph;\n    this.currentRes.prec=this.result.current.precip_mm;\n    console.log(this.currentRes)\n    const forecastArray=this.result.forecast.forecastday;\n    this.data = [];\n    for(let itr=0;itr<forecastArray.length;itr++){\n       const obj=new Weather();\n       obj.cityName=this.result.location.name;\n       obj.minTemp=forecastArray[itr].day.mintemp_c;\n       obj.maxTemp=forecastArray[itr].day.maxtemp_c;\n       obj.icon=forecastArray[itr].day.condition.icon;\n       obj.weatherKind=forecastArray[itr].day.condition.text;\n       obj.day=this.days[this.getCurrentDay(forecastArray[itr].date)];\n       this.data.push(obj);\n    }\n    this.data[0].day=\"Today\";\n  });\n}\ngetCurrentDay(date:string){\n  var d =new Date(date);\nreturn d.getDay();\n}\n}\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpClientModule} from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ForcastComponent } from './forcast/forcast.component';\nimport {FormsModule} from '@angular/forms';\nimport { CurrentComponent } from './current/current.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ForcastComponent,\n    CurrentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbnQvY3VycmVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\" style=\\\"padding-left: 24%\\\"  *ngIf=\\\"current.icon\\\">\\n    <h2>\\n        {{current.cityName}}\\n    </h2>    \\n<p class=\\\"text-primary\\\">{{current.day}}</p>\\n<p class=\\\"text-primary\\\">{{current.weatherKind}}</p>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-4\\\">\\n      <img src=\\\"{{current.icon}}\\\" alt=\\\"\\\">{{current.temp}}&#8451;\\n     \\n  </div>\\n  <div class=\\\"col-lg-6\\\">\\n      <p class=\\\"text-primary\\\">Humidity:- {{current.humidity}}%</p>\\n      <p class=\\\"text-primary\\\">Wind Speed:- {{current.windSpeed}} mph</p>\\n      <p class=\\\"text-primary\\\">Precipitation:- {{current.prec}}%</p>\\n  </div>\\n</div>\\n</div>\\n\\n\"","import { Component, OnInit,Input } from '@angular/core';\n\n\n\n@Component({\n  selector: 'app-current',\n  templateUrl: './current.component.html',\n  styleUrls: ['./current.component.css']\n})\nexport class CurrentComponent implements OnInit {\n  @Input() current;\n  \n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZvcmNhc3QvZm9yY2FzdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<tr>\\n    <th class=\\\"pr-5\\\" scope=\\\"row\\\">{{result.day}}</th>\\n    \\n    <td class=\\\"pr-5\\\"><img src='{{result.icon}}'></td>\\n    <td>\\n      <tr>\\n          <td class=\\\"pr-5\\\">{{result.minTemp}}&#8451;</td>\\n      </tr>\\n      <tr>\\n          <td >{{result.maxTemp}}&#8451;</td>\\n      </tr>\\n    </td>\\n\\n    <td>{{result.weatherKind}}</td>\\n    \\n  </tr>\\n\\n\\n\\n    \"","import { Component, OnInit,Input } from '@angular/core';\nimport {Weather} from '../weather';\n\n\n\n@Component({\n  selector: 'app-forcast',\n  templateUrl: './forcast.component.html',\n  styleUrls: ['./forcast.component.css']\n})\nexport class ForcastComponent implements OnInit {\n  @Input() result;\n  constructor() { }\n   forcastData:Array<Weather>;\n  ngOnInit() {\n  }\n\n}\n","export class Weather {\n    public cityName:string;\n    public day:string;\n    public temp:string;\n    public icon:string;\n    public minTemp:string;\n    public maxTemp:string;\n    public humidity:string;\n    public windSpeed:string;\n    public prec:string;\n    public weatherKind:string;\n    constructor(\n        ){}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}